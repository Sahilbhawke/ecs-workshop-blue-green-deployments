name: Deploy to ECS (Blue-Green with N-1 Task Revision)

on:
  workflow_dispatch:
    inputs:
      cluster_name:
        description: 'ECS Cluster Name'
        required: true
        default: 'bluegreen-cluster'  # You can provide a default or leave it empty
      service_name:
        description: 'ECS Service Name'
        required: true
        default: 'bluegreen-service'  # You can provide a default or leave it empty

permissions:
  id-token: write  # Allow writing ID token for authentication
  contents: read   # Allow reading the contents of the repository

jobs:
  fetch_task_def:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::222634373323:role/github-actions

    - name: Update ECS Service with N-1 Task Definition
      run: |
        # Update the ECS service with the previous task definition revision
        aws ecs update-service \
          --cluster ${{ github.event.inputs.cluster_name }} \
          --service ${{ github.event.inputs.service_name }} \
          --task-definition ${{ var.PREVIOUS_TASK_DEF }}\
          --region ${{ secrets.AWS_REGION }}

    - name: Monitor ECS Service Deployment
      run: |
        # Wait for the ECS service to stabilize with the new task definition
        SERVICE_NAME=${{ github.event.inputs.service_name }}
        CLUSTER_NAME=${{ github.event.inputs.cluster_name }}

        # Poll until the service reaches a stable state
        until [[ $(aws ecs describe-services --cluster $CLUSTER_NAME --services $SERVICE_NAME --query "services[0].status" --output text) == "ACTIVE" ]]; do
          echo "Waiting for ECS service to stabilize..."
          sleep 30
        done
        echo "Deployment to ECS is stable and complete."
